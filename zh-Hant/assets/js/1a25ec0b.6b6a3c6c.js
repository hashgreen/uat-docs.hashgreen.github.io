"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2019],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),h=c(n),d=i,f=h["".concat(s,".").concat(d)]||h[d]||p[d]||o;return n?a.createElement(f,r(r({ref:t},u),{},{components:n})):a.createElement(f,r({ref:t},u))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,r=new Array(o);r[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,r[1]=l;for(var c=2;c<o;c++)r[c]=n[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},2672:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return r},default:function(){return p},frontMatter:function(){return o},metadata:function(){return l},toc:function(){return c}});var a=n(3117),i=(n(7294),n(3905));const o={title:"\ud83d\udcd6\xa0Features"},r=void 0,l={unversionedId:"features",id:"features",title:"\ud83d\udcd6\xa0Features",description:"Highlight",source:"@site/docs/features.md",sourceDirName:".",slug:"/features",permalink:"/zh-Hant/features",draft:!1,tags:[],version:"current",frontMatter:{title:"\ud83d\udcd6\xa0Features"},sidebar:"sidebar",previous:{title:"\u25b6 Get Started",permalink:"/zh-Hant/get-started"},next:{title:"\ud83d\udcb1 \u4ea4\u6613\u6240",permalink:"/zh-Hant/exchange"}},s={},c=[{value:"Highlight",id:"highlight",level:2},{value:"Offer",id:"offer",level:3},{value:"Key Features",id:"key-features",level:2},{value:"Zap",id:"zap",level:3},{value:"Marketplace Aggregation",id:"marketplace-aggregation",level:3},{value:"Permissioning",id:"permissioning",level:3},{value:"Airdrop to pool",id:"airdrop-to-pool",level:3},{value:"Money Matters",id:"money-matters",level:2},{value:"Fair Pricing",id:"fair-pricing",level:3},{value:"Fee",id:"fee",level:3},{value:"Future Works",id:"future-works",level:2},{value:"Native Singleton Aggregation",id:"native-singleton-aggregation",level:3},{value:"End User Aggregation",id:"end-user-aggregation",level:3},{value:"Technicals",id:"technicals",level:2},{value:"Cypher",id:"cypher",level:3}],u={toc:c};function p(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("img",{src:"/img/pyke-whitepaper-features-banner.jpg"}),(0,i.kt)("h2",{id:"highlight"},"Highlight"),(0,i.kt)("h3",{id:"offer"},"Offer"),(0,i.kt)("p",null,"HashgreenSwap uses offers at its core. Whether it\u2019s liquidity addition, liquidity removal, or token swaps, users can look up current prices of the pool and submit a corresponding offer to match the HGSwap\u2019s pools. For example, one can create an offer swapping 1.000 XCH for 35.000 USDS, and the HGSwap dApp can combine it with the pool funds, creating a transaction (\u201dspend bundle\u201d for chialisp people) to be submitted to the blockchain."),(0,i.kt)("p",null,"This experience is different from current peer-to-peer (p2p) trading in that you do not need a counter-party to take your offer, as the HGSwap will always take your offer as long as your offering prices are at or around the market price. All transactions can settle within a block (less than a minute in real time) provided sufficient fees are included in the offer."),(0,i.kt)("h2",{id:"key-features"},"Key Features"),(0,i.kt)("h3",{id:"zap"},"Zap"),(0,i.kt)("p",null,"\u201cZap\u201d is the ability to add unequal funds to the pool. In Uniswap, you will have to add equal values in two tokens (e.g., 1 ETH and 1800 USDC) to deposit liquidity. HGSwap is built factoring in unequal fund addition, which allows several parties to provide liquidity so much more easily. As a XCH holder, you can directly add them to the XCH-USDS pool without having to convert half of them into USDS first; as a project developer, you can simply put in PROJ token into a PROJ-XCH pool to provide liquidity."),(0,i.kt)("p",null,"Simply put, it is a huge time and effort saver for the users to have the ability to \u201czap\u201d into a liquidity pool, and you would not end up with annoying tiny amount of scrap tokens on either end."),(0,i.kt)("h3",{id:"marketplace-aggregation"},"Marketplace Aggregation"),(0,i.kt)("p",null,"One of the core feature of offers is the ability to aggregate. There are plenty of marketplaces that currently hold an amazing repository of offer files, and these marketplaces can become big players against HGSwap by aggregating multiple offers into one and trading against it."),(0,i.kt)("p",null,"One thing to note is, many current offers on the market have prices far away from market prices, and generally they wouldn\u2019t be able to be traded against HGSwap. Only offers with prices close to the market price have a chance to be included in the marketplace aggregation, thus making it possible for these marketplaces be profitable."),(0,i.kt)("h3",{id:"permissioning"},"Permissioning"),(0,i.kt)("p",null,"Chia is a coin-set model blockchain, and hence lack of permissioning can lead to denial-of-service attacks against any protocols. Concretely, a bad actor can consistently interact with HGSwap in each and every block while not performing any trade, thus blocking any actual users from using the service."),(0,i.kt)("p",null,"While it is true that the bad actor has to pay specific fees to continue to block the HGSwap, compared to the TVL (total value locked) of the pool it might be financially feasible and reasonable. This is a potentially weakness (not a security weakness though) of this version, and we aim to work with the community to continue to resolve the issue."),(0,i.kt)("h3",{id:"airdrop-to-pool"},"Airdrop to pool"),(0,i.kt)("p",null,"You can airdrop your tokens or assets to a pool! While usually there is a 0.3% associated with the liquidity pools in terms of swapping, you can opt to donate everything into the pool and make it an airdrop! This will be a very useful inceptive tool for project developers as they can run campaigns to urge users to add liquidity into PROJ-XCH pools."),(0,i.kt)("h2",{id:"money-matters"},"Money Matters"),(0,i.kt)("h3",{id:"fair-pricing"},"Fair Pricing"),(0,i.kt)("p",null,"We don\u2019t like to brag about ourselves, but we have employed advanced calculus to make detailed mathematical equations about the tokens and liquidity token payouts. The equations looks somewhat similar to the Uniswap\u2019s $\\sqrt{A \\times B} = V$, but has bells and whistles to ensure the fees are collected fairly in scenerios like \u201czapping\u201d and when multiple offers are aggregated together. It looks somewhat like this:"),(0,i.kt)("p",null,"$$\n\\left(\n\\frac{1}{2} \\log \\frac{A'}{A} +\n\\frac{1}{2} \\log \\frac{B'}{B}\n\\right) -\n\\frac{1}{2}\n\\phi\n\\left|\n\\frac{1}{2} \\log \\frac{A'}{A} -\n\\frac{1}{2} \\log \\frac{B'}{B}\n\\right|\n\\ge\n\\log \\frac{V'}{V}\n$$"),(0,i.kt)("p",null,"Don\u2019t worry if you can\u2019t understand, because you don\u2019t have to. You can trust that the offers you are making will guarantee you can receiving at least the assets you are committing in the offer files, and leave the rest of the complicated maths to HGSwap."),(0,i.kt)("h3",{id:"fee"},"Fee"),(0,i.kt)("p",null,"We charge a 0.30% fee (like in Uniswap V1). 0.25% will go to the liquidity providers and 0.05% will go to HG token holders (a.k.a. protocol owners, or DAO participants). It is interesting to note that in cases like \u201czapping\u201d where only half of the assets are effectively swapped, we cut your fee rate in half (because you are a great liquidity provider and we love you!)."),(0,i.kt)("p",null,"The details of how protocol fees are distributed and utilized will be announced later, but it will likely be used to buy back $HG tokens from the market."),(0,i.kt)("h2",{id:"future-works"},"Future Works"),(0,i.kt)("p",null,"The description of future works below might a little bit developer-facing and some Chia understanding is very required to continue."),(0,i.kt)("h3",{id:"native-singleton-aggregation"},"Native Singleton Aggregation"),(0,i.kt)("p",null,"It has been a very hot topic whether \u201csingleton aggregation\u201d is coming to the Chia Blockchain or not. Basically, with this feature on the consensus level, multiple users can interact with the same singleton (or, NFT) in the same block without a contention problem (i.e., only one of the users can successfully interact with the coin but the others will fail to perform so). Hence the aforementioned problems in the permissioning section will be largely alleviated, and the bad actors can no longer single-handedly block other users\u2019 transactions against HGSwap."),(0,i.kt)("h3",{id:"end-user-aggregation"},"End User Aggregation"),(0,i.kt)("p",null,"Before the official singleton aggregation lands, it is feasible for the HGSwap dApp to look for pending transactions in the mempool, which other users have submitted for the intention of trading against HGSwap, and to build on top of the resulting singletons by ",(0,i.kt)("a",{parentName:"p",href:"https://docs.chia.net/mempool#replace-by-fee"},"replacing the original transaction"),"."),(0,i.kt)("p",null,"The effect is, that subsequent users who are interested in interacting with HGSwap can \u201cride on the same coin\u201d, which prevents users from fighting over the same coin; yet this requires the dApp to employ a strong backend service to achieve so as it needs to constantly listen to the mempool and provide the latest singleton information."),(0,i.kt)("p",null,"This approach will always be inferior to the native singleton aggregation as described above, but is a solution that any developer can accomplish."),(0,i.kt)("h2",{id:"technicals"},"Technicals"),(0,i.kt)("h3",{id:"cypher"},"Cypher"),(0,i.kt)("p",null,"The HashgreenSwap is built using an open-source chialisp library called ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/hashgreen/cypher-chialisp"},"Cypher"),". It is a library aiming at packing the most commonly used functionalities and alleviating common security issues for chialisp smart coin developers. It is extensively tested and hence increases the security promise we offer."))}p.isMDXComponent=!0}}]);